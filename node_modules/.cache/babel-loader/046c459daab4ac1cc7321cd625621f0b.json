{"ast":null,"code":"var _jsxFileName = \"/home/edward/Desktop/magic-eight-ball/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport EightBall from './components/EightBall';\nimport ColorBoxes from './components/ColorBoxes';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const answers = [{\n    msg: \"It is certain.\",\n    color: \"green\"\n  }, {\n    msg: \"It is decidedly so.\",\n    color: \"green\"\n  }, {\n    msg: \"Without a doubt.\",\n    color: \"green\"\n  }, {\n    msg: \"Yes - definitely.\",\n    color: \"green\"\n  }, {\n    msg: \"You may rely on it.\",\n    color: \"green\"\n  }, {\n    msg: \"As I see it, yes.\",\n    color: \"goldenrod\"\n  }, {\n    msg: \"Most likely.\",\n    color: \"goldenrod\"\n  }, {\n    msg: \"Outlook good.\",\n    color: \"goldenrod\"\n  }, {\n    msg: \"Yes.\",\n    color: \"goldenrod\"\n  }, {\n    msg: \"Signs point to yes.\",\n    color: \"goldenrod\"\n  }, {\n    msg: \"Reply hazy, try again.\",\n    color: \"goldenrod\"\n  }, {\n    msg: \"Ask again later.\",\n    color: \"goldenrod\"\n  }, {\n    msg: \"Better not tell you now.\",\n    color: \"goldenrod\"\n  }, {\n    msg: \"Cannot predict now.\",\n    color: \"goldenrod\"\n  }, {\n    msg: \"Concentrate and ask again.\",\n    color: \"goldenrod\"\n  }, {\n    msg: \"Don't count on it.\",\n    color: \"red\"\n  }, {\n    msg: \"My reply is no.\",\n    color: \"red\"\n  }, {\n    msg: \"My sources say no.\",\n    color: \"red\"\n  }, {\n    msg: \"Outlook not so good.\",\n    color: \"red\"\n  }, {\n    msg: \"Very doubtful.\",\n    color: \"red\"\n  }];\n  const defaultColors = [\"red\", \"green\", \"blue\", \"yellow\", \"purple\"];\n  const [color, setColor] = useState(\"black\");\n  const [message, setMessage] = useState(\"Think of a Question\");\n  const [boxes, setBoxes] = useState(Array.from({\n    length: 16\n  }, () => defaultColors[Math.floor(Math.random() * defaultColors.length)]));\n  const handleClick = () => {\n    let randomIndex = Math.floor(Math.random() * answers.length);\n    if (answers[randomIndex]) {\n      setMessage(answers[randomIndex].msg);\n      setColor(answers[randomIndex].color);\n      setBoxes(boxes.map(() => defaultColors[Math.floor(Math.random() * defaultColors.length)]));\n    } else {\n      console.error(`No answer at index ${randomIndex}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(EightBall, {\n      color: color,\n      message: message,\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ColorBoxes, {\n      boxes: boxes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DeYYCWqOEhxRHfgz4HlmTk8ZXy4=\");\n_c = App;\nexport default App;\n\n// import React from 'react';\n// import EightBall from './components/EightBall';\n// import ColorBoxes from './components/ColorBoxes';\n// import './App.css';\n\n// function App() {\n//     const answers = [\n//         { msg: \"It is certain.\", color: \"green\" },\n//         { msg: \"It is decidedly so.\", color: \"green\" },\n//         { msg: \"Without a doubt.\", color: \"green\" },\n//         { msg: \"Yes – definitely.\", color: \"green\" },\n//         { msg: \"You may rely on it.\", color: \"green\" },\n//         { msg: \"As I see it, yes.\", color: \"green\" },\n//         { msg: \"Most likely.\", color: \"green\" },\n//         { msg: \"Outlook good.\", color: \"green\" },\n//         { msg: \"Yes.\", color: \"green\" },\n//         { msg: \"Signs point to yes.\", color: \"goldenrod\" },\n//         { msg: \"Reply hazy, try again.\", color: \"goldenrod\" },\n//         { msg: \"Ask again later.\", color: \"goldenrod\" },\n//         { msg: \"Better not tell you now.\", color: \"goldenrod\" },\n//         { msg: \"Cannot predict now.\", color: \"goldenrod\" },\n//         { msg: \"Concentrate and ask again.\", color: \"goldenrod\" },\n//         { msg: \"Don't count on it.\", color: \"red\" },\n//         { msg: \"My reply is no.\", color: \"red\" },\n//         { msg: \"My sources say no.\", color: \"red\" },\n//         { msg: \"Outlook not so good.\", color: \"red\" },\n//         { msg: \"Very doubtful.\", color: \"red\" }\n//       ];\n\n//   return (\n//     <div className=\"App\">\n//       <EightBall answers={answers} />\n//       <ColorBoxes />\n//     </div>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","EightBall","ColorBoxes","jsxDEV","_jsxDEV","App","_s","answers","msg","color","defaultColors","setColor","message","setMessage","boxes","setBoxes","Array","from","length","Math","floor","random","handleClick","randomIndex","map","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/edward/Desktop/magic-eight-ball/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport EightBall from './components/EightBall';\nimport ColorBoxes from './components/ColorBoxes';\nimport './App.css';\n\nfunction App() {\n  const answers = [\n    { msg: \"It is certain.\", color: \"green\" },\n    { msg: \"It is decidedly so.\", color: \"green\" },\n    { msg: \"Without a doubt.\", color: \"green\" },\n    { msg: \"Yes - definitely.\", color: \"green\" },\n    { msg: \"You may rely on it.\", color: \"green\" },\n    { msg: \"As I see it, yes.\", color: \"goldenrod\" },\n    { msg: \"Most likely.\", color: \"goldenrod\" },\n    { msg: \"Outlook good.\", color: \"goldenrod\" },\n    { msg: \"Yes.\", color: \"goldenrod\" },\n    { msg: \"Signs point to yes.\", color: \"goldenrod\" },\n    { msg: \"Reply hazy, try again.\", color: \"goldenrod\" },\n    { msg: \"Ask again later.\", color: \"goldenrod\" },\n    { msg: \"Better not tell you now.\", color: \"goldenrod\" },\n    { msg: \"Cannot predict now.\", color: \"goldenrod\" },\n    { msg: \"Concentrate and ask again.\", color: \"goldenrod\" },\n    { msg: \"Don't count on it.\", color: \"red\" },\n    { msg: \"My reply is no.\", color: \"red\" },\n    { msg: \"My sources say no.\", color: \"red\" },\n    { msg: \"Outlook not so good.\", color: \"red\" },\n    { msg: \"Very doubtful.\", color: \"red\" },\n  ];\n\n  const defaultColors = [\"red\", \"green\", \"blue\", \"yellow\", \"purple\"];\n  const [color, setColor] = useState(\"black\");\n  const [message, setMessage] = useState(\"Think of a Question\");\n  const [boxes, setBoxes] = useState(Array.from({ length: 16 }, () => defaultColors[Math.floor(Math.random() * defaultColors.length)]));\n\n  const handleClick = () => {\n    let randomIndex = Math.floor(Math.random() * answers.length);\n    if (answers[randomIndex]) {\n      setMessage(answers[randomIndex].msg);\n      setColor(answers[randomIndex].color);\n      setBoxes(boxes.map(() => defaultColors[Math.floor(Math.random() * defaultColors.length)]));\n    } else {\n      console.error(`No answer at index ${randomIndex}`);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <EightBall color={color} message={message} handleClick={handleClick} />\n      <ColorBoxes boxes={boxes} />\n    </div>\n  );\n}\n\nexport default App;\n\n// import React from 'react';\n// import EightBall from './components/EightBall';\n// import ColorBoxes from './components/ColorBoxes';\n// import './App.css';\n\n// function App() {\n//     const answers = [\n//         { msg: \"It is certain.\", color: \"green\" },\n//         { msg: \"It is decidedly so.\", color: \"green\" },\n//         { msg: \"Without a doubt.\", color: \"green\" },\n//         { msg: \"Yes – definitely.\", color: \"green\" },\n//         { msg: \"You may rely on it.\", color: \"green\" },\n//         { msg: \"As I see it, yes.\", color: \"green\" },\n//         { msg: \"Most likely.\", color: \"green\" },\n//         { msg: \"Outlook good.\", color: \"green\" },\n//         { msg: \"Yes.\", color: \"green\" },\n//         { msg: \"Signs point to yes.\", color: \"goldenrod\" },\n//         { msg: \"Reply hazy, try again.\", color: \"goldenrod\" },\n//         { msg: \"Ask again later.\", color: \"goldenrod\" },\n//         { msg: \"Better not tell you now.\", color: \"goldenrod\" },\n//         { msg: \"Cannot predict now.\", color: \"goldenrod\" },\n//         { msg: \"Concentrate and ask again.\", color: \"goldenrod\" },\n//         { msg: \"Don't count on it.\", color: \"red\" },\n//         { msg: \"My reply is no.\", color: \"red\" },\n//         { msg: \"My sources say no.\", color: \"red\" },\n//         { msg: \"Outlook not so good.\", color: \"red\" },\n//         { msg: \"Very doubtful.\", color: \"red\" }\n//       ];\n\n//   return (\n//     <div className=\"App\">\n//       <EightBall answers={answers} />\n//       <ColorBoxes />\n//     </div>\n//   );\n// }\n\n// export default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}